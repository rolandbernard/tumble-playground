{"version":3,"sources":["logo.svg","tumble-compiler.js","ui/button.js","ui/code-editor.js","ui/paper.js","ui/header.js","ui/spinner.js","app.js","index.js"],"names":["module","exports","compiler","onPrint","a","Promise","res","window","addEventListener","Tumble","text","ready","Button","props","color","variant","isLink","children","disabled","className","others","ripple_root","createRef","onMouseDown","event","button","target","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","ripple","document","createElement","classList","add","ripple_child","appendChild","size","Math","sqrt","clientWidth","clientHeight","style","width","height","getElementsByClassName","onMouseUpOrLeave","root_ripple","childNodes","forEach","contains","removeChild","classes","toLowerCase","onMouseUp","onMouseLeave","ref","CodeEditor","value","onChange","input","line_count","split","length","Array","keys","map","i","key","onKeyDown","sel_start_pos","currentTarget","selectionStart","sel_end_pos","selectionEnd","new_value","substring","preventDefault","current","placeholder","autoComplete","autoCorrect","autoCapitalize","spellCheck","scrolling","Paper","Header","Spacer","Spinner","globalOutput","App","useState","setInput","output","setOutput","loading","setLoading","running","setRunning","useEffect","initCompiler","then","flex","src","Logo","alt","display","flexDirection","margin","onClick","program","FS","writeFile","callMain","replace","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.157a2346.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.4f27ef60.svg\";","\nlet compiler = null;\n\n/* global Tumble */\n\nexport async function initCompiler(onPrint) {\n    await new Promise((res) => {\n        window.addEventListener('load', () => res());\n        if (typeof(Tumble) !== 'undefined') {\n            res();\n        }\n    });\n    compiler = await Tumble({\n        'print': function (text) { onPrint(text) },\n        'printErr': function (text) { onPrint(text) },\n    });\n    await compiler.ready;\n}\n\nexport function runProgram(program) {\n    compiler.FS.writeFile('program.tumble', program);\n    compiler.callMain(['program.tumble', '-e', 'jit', '-t', 'wasm32', \"--force-target\"]);\n}\n","\nimport React, { createRef } from 'react';\n\nimport './button.scss';\n\nexport function Button(props) {\n    const { color, variant, isLink, children, disabled, className, ...others } = props;\n    const ripple_root = createRef();\n    const onMouseDown = (event) => {\n        let button = event.target;\n        let rect = button.getBoundingClientRect();\n        let x = event.clientX - rect.left;\n        let y = event.clientY - rect.top;\n        let ripple = document.createElement('span');\n        ripple.classList.add('ui-touch-ripple-ripple');\n        let ripple_child = document.createElement('span');\n        ripple_child.classList.add('ui-touch-ripple-child');\n        ripple.appendChild(ripple_child);\n        let size = Math.sqrt(button.clientWidth * button.clientWidth + button.clientHeight * button.clientHeight);\n        ripple.style.width = (size * 2) + 'px';\n        ripple.style.height = (size * 2) + 'px';\n        ripple.style.left = (x - size) + 'px';\n        ripple.style.top = (y - size) + 'px';\n        let root_ripple = button.getElementsByClassName('ui-touch-ripple-root')[0];\n        root_ripple.appendChild(ripple);\n    };\n    const onMouseUpOrLeave = (event) => {\n        let button = event.target;\n        let root_ripple = button.getElementsByClassName('ui-touch-ripple-root')[0];\n        root_ripple.childNodes.forEach((ripple) => {\n            let ripple_child = ripple.childNodes[0];\n            if (!ripple_child.classList.contains('ui-touch-ripple-child-exit')) {\n                ripple_child.classList.add('ui-touch-ripple-child-exit');\n                ripple_child.addEventListener('animationend', () => {\n                    root_ripple.removeChild(ripple);\n                });\n            }\n        });\n    };\n    let classes = 'ui-button';\n    if(variant && variant.toLowerCase() === 'outlined') {\n        classes += ' ui-button-outlined';\n    } else if(variant && variant.toLowerCase() === 'text') {\n        classes += ' ui-button-text';\n    }\n    if(color && color.toLowerCase() === 'primary') {\n        classes += ' ui-button-primary';\n    } else if(color && color.toLowerCase() === 'secondary') {\n        classes += ' ui-button-secondary';\n    }\n    if(disabled) {\n        classes += ' ui-button-disabled';\n    }\n    if(className) {\n        classes += ' ' + className;\n    }\n    return (isLink ?\n        (<a\n            className={classes}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUpOrLeave}\n            onMouseLeave={onMouseUpOrLeave}\n            { ...others }\n        >\n            <span ref={ripple_root} className=\"ui-touch-ripple-root\"></span>\n            <span className=\"ui-button-content\" children={children}></span>\n        </a>) :\n        (<button\n            className={classes}\n            onMouseDown={onMouseDown}\n            onMouseUp={onMouseUpOrLeave}\n            onMouseLeave={onMouseUpOrLeave}\n            disabled={disabled}\n            { ...others }\n        >\n            <span ref={ripple_root} className=\"ui-touch-ripple-root\"></span>\n            <span className=\"ui-button-content\" children={children}></span>\n        </button>)\n    );   \n}\n\nexport default Button;\n","\nimport React, { createRef } from 'react';\n\nimport './code-editor.scss';\n\nexport function CodeEditor(props) {\n    const { value, onChange, className, ...others } = props;\n    const input = createRef();\n    let line_count = value ? value.split('\\n').length : 1;\n    const myOnChange = (event) => {\n        if (onChange) {\n            onChange(event.target.value);\n        }\n    };\n    const onKeyPress = (event) => {\n        if (event.key === \"Tab\") {\n            let sel_start_pos = event.currentTarget.selectionStart;\n            let sel_end_pos = event.currentTarget.selectionEnd;\n            let new_value = value.substring(0, sel_start_pos) + \"    \" + value.substring(sel_end_pos);\n            event.preventDefault();\n            input.current.value = new_value;\n            input.current.selectionStart = sel_start_pos + 4;\n            input.current.selectionEnd = sel_start_pos + 4;\n            onChange(new_value);\n        }\n    }\n    return (\n        <div className={'ui-code-editor ' + (className || '')} {...others}>\n            <div className=\"ui-code-editor-container\">\n                <div className=\"ui-code-editor-lines\">\n                    {[...Array(line_count).keys()].map((i) => (\n                        <span key={i} className=\"ui-code-editor-linenumber\">{i + 1}</span>\n                    ))}\n                </div>\n                <textarea\n                    ref={input}\n                    value={value}\n                    onChange={myOnChange}\n                    onKeyDown={onKeyPress}\n                    className=\"ui-code-editor-input\"\n                    placeholder=\"Type some code...\"\n                    autoComplete=\"off\" autoCorrect=\"off\" autoCapitalize=\"off\" spellCheck=\"false\"\n                    scrolling=\"no\"\n                ></textarea>\n            </div>\n        </div>\n    );\n}\n\nexport default CodeEditor;\n","\nimport React from 'react';\n\nimport './paper.scss';\n\nexport function Paper(props) {\n    const { className, ...others } = props;\n    return (\n        <span className={'ui-paper ' + (className || '')} {...others}>\n        </span>\n    );\n}\n\nexport default Paper;\n\n","\nimport React from 'react';\n\nimport './header.scss';\n\nexport function Header(props) {\n    const { className, ...others } = props;\n    return (\n        <div className={'ui-header ' + (className || '')} {...others}>\n        </div>\n    );\n}\n\nexport function Spacer(props) {\n    return (<span className=\"ui-header-spacer\" {...props}></span>)\n}\n\nexport default Header;","\nimport React from 'react';\n\nimport './spinner.scss';\n\nexport function Spinner(props) {\n    const { className, ...others } = props;\n    return (\n        <span className={'ui-spinner ' + (className || '')} {...others}>\n            {[...Array(10).keys()].map((i) => (\n                <span key={i}></span>\n            ))}\n        </span>\n    );\n}\n\nexport default Spinner;\n","\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nimport { initCompiler, runProgram } from './tumble-compiler';\nimport Button from './ui/button';\nimport CodeEditor from './ui/code-editor';\nimport Paper from './ui/paper';\nimport { Header, Spacer } from './ui/header';\nimport Spinner from './ui/spinner';\nimport Logo from './logo.svg';\nimport './app.scss';\n\nlet globalOutput = \"\";\n\nconst initial_code = '\\nextern printf(fmt: *i8, ..);\\n\\nmain() {\\n    printf(\"Hello world!\\\\n\");\\n}\\n';\n\nfunction App() {\n    const [input, setInput] = useState(initial_code);\n    const [output, setOutput] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [running, setRunning] = useState(false);\n    globalOutput = output;\n    useEffect(() => {\n        initCompiler((text) => {\n            globalOutput += (globalOutput ? '\\n' : '') + text;\n        }).then(() => {\n            setLoading(false);\n        })\n    }, []);\n    const onRunProgram = () => {\n        setRunning(true);\n        runProgram(input);\n        setOutput(globalOutput);\n        setRunning(false);\n    }\n    const onClearOutput = () => {\n        setOutput('');\n    }\n    return (\n        <div className=\"app-root\">\n            <Header style={{ flex: '0 0 auto' }}>\n                <Spacer></Spacer>\n                <img src={Logo} alt=\"Logo\" className=\"header-logo\"></img>\n                <span className=\"header-title\">Tumbleweed</span>\n                <Spacer></Spacer>\n            </Header>\n            <div className=\"app-content\">\n                <div style={{ flex: '1 1 100%', display: 'flex', flexDirection: 'column' }}>\n                    <div className=\"app-content-header\">\n                        Input:\n                        <Spacer></Spacer>\n                        <Button\n                            disabled={running || loading}\n                            color=\"primary\"\n                            style={{ margin: 0, flex: '0 0 auto' }}\n                            onClick={onRunProgram}\n                        >Run program</Button>\n                    </div>\n                    <CodeEditor\n                        style={{ flex: '1 1 100%' }}\n                        value={input}\n                        onChange={(value) => setInput(value)}\n                    ></CodeEditor>\n                </div>\n                <div style={{ flex: '1 1 75%', display: 'flex', flexDirection: 'column' }}>\n                    {loading ?\n                        (<div className=\"app-loading\"><Spinner></Spinner></div>) :\n                        ([(<div className=\"app-content-header\">\n                            Output:\n                            <Spacer></Spacer>\n                            <Button\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                style={{ margin: 0, flex: '0 0 auto' }}\n                                onClick={onClearOutput}\n                            >Clear output</Button>\n                        </div>),\n                        (<Paper className=\"app-output\">\n                            <pre>{output.replace(/\\x1B\\[.*?m/g, \"\")}</pre>\n                        </Paper>)])}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\n\nimport App from './app';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}